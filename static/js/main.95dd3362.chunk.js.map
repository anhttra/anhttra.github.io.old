{"version":3,"sources":["components/landingpage.js","components/aboutpage.js","components/main.js","App.js","serviceWorker.js","index.js"],"names":["LandingPage","react_default","a","createElement","style","width","margin","lib","className","col","href","rel","target","aria-hidden","Component","AboutPage","Main","react_router","exact","path","component","App","fixedHeader","title","scroll","react_router_dom","to","main","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kMAyCeA,mLApCX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,SACnCL,EAAAC,EAAAC,cAACI,EAAA,KAAD,CAAMC,UAAU,gBACdP,EAAAC,EAAAC,cAACI,EAAA,KAAD,CAAME,IAAK,IACTR,EAAAC,EAAAC,cAAA,OAAKK,UAAU,eACbP,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,OACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,eACfP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,kBACfP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,mBACfP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,kBACfP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,iBACfP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,mBAGjBP,EAAAC,EAAAC,cAAA,sEAEAF,EAAAC,EAAAC,cAAA,OAAKK,UAAU,gBACbP,EAAAC,EAAAC,cAAA,KAAGO,KAAK,uCAAuCC,IAAI,sBAAsBC,OAAO,UAC9EX,EAAAC,EAAAC,cAAA,KAAGK,UAAU,wBAAwBK,cAAY,UAEnDZ,EAAAC,EAAAC,cAAA,KAAGO,KAAK,wCAAwCC,IAAI,sBAAsBC,OAAO,UAC/EX,EAAAC,EAAAC,cAAA,KAAGK,UAAU,wBAAwBK,cAAY,UAEnDZ,EAAAC,EAAAC,cAAA,KAAGO,KAAK,6BAA6BC,IAAI,sBAAsBC,OAAO,UACpEX,EAAAC,EAAAC,cAAA,KAAGK,UAAU,sBAAsBK,cAAY,sBA3BvCC,aCgBXC,mLAdX,OACEd,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,SACnCL,EAAAC,EAAAC,cAACI,EAAA,KAAD,CAAMC,UAAU,cACdP,EAAAC,EAAAC,cAACI,EAAA,KAAD,CAAME,IAAK,IACTR,EAAAC,EAAAC,cAAA,OAAKK,UAAU,cACbP,EAAAC,EAAAC,cAAA,wCAPUW,qBCSTE,EAPF,kBACTf,EAAAC,EAAAC,cAACc,EAAA,EAAD,KACIhB,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWpB,IACjCC,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAOE,KAAK,SAASC,UAAWL,cC8BzBM,MA7Bf,WACE,OACEpB,EAAAC,EAAAC,cAAA,OAAKK,UAAU,oBACbP,EAAAC,EAAAC,cAACI,EAAA,OAAD,CAAQe,aAAW,EAACd,UAAU,oBAC5BP,EAAAC,EAAAC,cAACI,EAAA,OAAD,CAAQC,UAAU,eAAee,MAAM,OAAOC,QAAM,GAClDvB,EAAAC,EAAAC,cAACI,EAAA,WAAD,KACEN,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMC,GAAG,KAAT,QACAzB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMC,GAAG,UAAT,WAGJzB,EAAAC,EAAAC,cAACI,EAAA,OAAD,CAAQgB,MAAM,MACZtB,EAAAC,EAAAC,cAACI,EAAA,WAAD,KACEN,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMC,GAAG,KAAT,QACAzB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMC,GAAG,UAAT,WAGJzB,EAAAC,EAAAC,cAACI,EAAA,QAAD,CAASC,UAAU,qBACjBP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,iBACfP,EAAAC,EAAAC,cAACwB,EAAD,OAGF1B,EAAAC,EAAAC,cAACI,EAAA,OAAD,CAAQC,UAAU,UACdP,EAAAC,EAAAC,cAAA,yCCnBQyB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,yECTNC,IAASC,OACLjC,EAAAC,EAAAC,cAACsB,EAAA,EAAD,KACIxB,EAAAC,EAAAC,cAACgC,EAAD,OAEFC,SAASC,eAAe,SDoHxB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.95dd3362.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Grid, Cell } from 'react-mdl';\n\nclass LandingPage extends Component {\n  render() {\n    return (\n      <div style={{ width: '100%', margin: 'auto' }}>\n        <Grid className=\"landing-grid\">\n          <Cell col={12}>\n            <div className=\"banner-text\">\n              <h1>Anh T. Tra</h1>\n              <div className=\"box\">\n                <div className=\"box-sm red\"></div>\n                <div className=\"box-sm orange\"></div>\n                <div className=\"box-sm yellow \"></div>\n                <div className=\"box-sm green \"></div>\n                <div className=\"box-sm blue \"></div>\n                <div className=\"box-sm purple\"></div>\n              </div>\n\n              <p> AI Researcher - Data Engineer - Coder - Speaker - Writer</p>\n\n              <div className=\"social-links\">\n                <a href=\"https://www.linkedin.com/in/anhttra/\" rel=\"noopener noreferrer\" target=\"_blank\">\n                  <i className=\"fa fa-linkedin-square\" aria-hidden=\"true\" />\n                </a>\n                <a href=\"https://www.facebook.com/trunganh0111\" rel=\"noopener noreferrer\" target=\"_blank\">\n                  <i className=\"fa fa-facebook-square\" aria-hidden=\"true\" />\n                </a>\n                <a href=\"https://github.com/anhttra\" rel=\"noopener noreferrer\" target=\"_blank\">\n                  <i className=\"fa fa-github-square\" aria-hidden=\"true\" />\n                </a>\n              </div>\n            </div>\n          </Cell>\n        </Grid>\n      </div>\n    )\n  }\n}\n\nexport default LandingPage;","import React, { Component } from 'react';\nimport { Grid, Cell } from 'react-mdl';\n\nclass AboutPage extends Component {\n  render() {\n    return (\n      <div style={{ width: '100%', margin: 'auto' }}>\n        <Grid className=\"about-grid\">\n          <Cell col={12}>\n            <div className=\"about-text\">\n              <p>Comming soon ...</p>\n            </div>\n          </Cell>\n        </Grid>\n      </div>\n    )\n  }\n}\n\nexport default AboutPage;","import React from 'react';\nimport LandingPage from './landingpage';\nimport AboutPage from './aboutpage';\nimport { Switch, Route } from 'react-router-dom';\n\nconst Main = () => (\n    <Switch>\n        <Route exact path=\"/\" component={LandingPage} />\n        <Route path=\"/about\" component={AboutPage} />\n    </Switch>\n)\n\nexport default Main;","import React from 'react';\nimport './App.css';\nimport { \n  Layout, Header, Navigation, Drawer, Content, Footer, \n  FooterSection, FooterLinkList, FooterDropDownSection \n} from 'react-mdl';\nimport Main from './components/main';\nimport { Link } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className=\"demo-big-content\">\n      <Layout fixedHeader className=\"layout-container\">\n        <Header className=\"header-color\" title=\"    \" scroll>\n          <Navigation>\n            <Link to=\"/\">Home</Link>\n            <Link to=\"/about\">About</Link>\n          </Navigation>\n        </Header>\n        <Drawer title=\"  \">\n          <Navigation>\n            <Link to=\"/\">Home</Link>\n            <Link to=\"/about\">About</Link>\n          </Navigation>\n        </Drawer>\n        <Content className=\"content-container\">\n          <div className=\"page-content\" />\n          <Main />\n        </Content>\n\n        <Footer className=\"footer\">\n            <p> Â© 2019 | Anh T. Tra </p>\n        </Footer>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>    \n    , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}